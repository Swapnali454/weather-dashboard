# Generated by Django 4.2.7 on 2025-10-29 05:53

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='City name', max_length=100)),
                ('country', models.CharField(help_text='Country name', max_length=100)),
                ('latitude', models.FloatField(help_text='Latitude coordinate')),
                ('longitude', models.FloatField(help_text='Longitude coordinate')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, help_text='Is location active for tracking')),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WeatherData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.FloatField(help_text='Temperature in Celsius')),
                ('feels_like', models.FloatField(help_text='Feels like temperature')),
                ('humidity', models.IntegerField(help_text='Humidity percentage')),
                ('pressure', models.IntegerField(help_text='Atmospheric pressure')),
                ('wind_speed', models.FloatField(help_text='Wind speed in m/s')),
                ('description', models.CharField(help_text='Weather description', max_length=200)),
                ('icon', models.CharField(help_text='Weather icon code', max_length=10)),
                ('recorded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weather_records', to='dashboard.location')),
            ],
            options={
                'verbose_name': 'Weather Data',
                'verbose_name_plural': 'Weather Data',
                'ordering': ['-recorded_at'],
            },
        ),
    ]
